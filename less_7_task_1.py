"""
Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными числами на промежутке
[-100; 100). Выведите на экран исходный и отсортированный массивы.
Примечания:
● алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
● постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
"""
import random


def bubble_sort(data):
    count = 0
    quantity = len(data) - 1
    stop = False
    while count < quantity and not stop:
        stop = True  # временно включаем "stop" - останавливаем внешний цикл
        for i in range(quantity - count):  # уменьшаем диапазон каждый раз до уже отсортированных данных
            if data[i] < data[i + 1]:
                data[i], data[i + 1] = data[i + 1], data[i]
                stop = False  # если что-то меняли, отключаем "stop", возобновляем цикл
        count += 1
        # print(f'>> {data}')
    return data


SIZE = 10
MIN = -100
MAX = 100
array = [random.randint(MIN, MAX - 1) for _ in range(SIZE)]
# array = [49, 32, 34, 22, 12, 0, -2, -3, -5, -23]
print('Исходный массив:')
print(array)
print('\nОтсортированный массив:')
print(bubble_sort(array))
